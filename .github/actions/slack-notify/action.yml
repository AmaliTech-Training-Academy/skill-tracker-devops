name: Slack Notify

description: "Send a Slack message if a webhook is provided; otherwise skip gracefully"

author: "Skill Tracker DevOps"

inputs:
  payload:
    description: "Slack JSON payload"
    required: true
  webhook:
    description: "Slack Incoming Webhook URL"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - name: Skip if webhook is missing
      if: ${{ inputs.webhook == '' }}
      shell: bash
      run: |
        echo "SLACK_WEBHOOK_URL not provided; skipping Slack notification."

    - name: Ensure jq is installed
      if: ${{ inputs.webhook != '' }}
      shell: bash
      run: |
        if ! command -v jq &> /dev/null; then
          echo "üì¶ Installing jq..."
          sudo apt-get update -qq
          sudo apt-get install -y jq
        else
          echo "‚úÖ jq is already installed"
        fi

    - name: Send Slack notification
      if: ${{ inputs.webhook != '' }}
      shell: bash
      run: |
        # Escape payload for safe shell usage with heredoc
        PAYLOAD=$(cat <<'EOF'
        ${{ inputs.payload }}
        EOF
        )
        
        # Validate JSON before sending
        if ! echo "$PAYLOAD" | jq empty 2>/dev/null; then
          echo "‚ùå Invalid JSON payload"
          exit 1
        fi
        
        echo "üì§ Sending Slack notification..."
        
        # Send with error handling and capture HTTP status
        RESPONSE=$(curl -X POST "${{ inputs.webhook }}" \
          -H 'Content-Type: application/json' \
          -d "$PAYLOAD" \
          -w "\n%{http_code}" \
          -s)
        
        HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
        BODY=$(echo "$RESPONSE" | head -n -1)
        
        # Check HTTP response code
        if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
          echo "‚úÖ Slack notification sent successfully (HTTP $HTTP_CODE)"
        else
          echo "‚ùå Slack notification failed (HTTP $HTTP_CODE)"
          echo "Response: $BODY"
          exit 1
        fi
